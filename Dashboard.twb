<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20241.24.0308.0326                               -->
<workbook original-version='18.1' source-build='2024.1.1 (20241.24.0308.0326)' source-platform='win' version='18.1' xml:base='https://prod-apnortheast-a.online.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelRelationshipPerfOptions.true...ObjectModelRelationshipPerfOptions />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='Book1' path='/t/samarth2012037241f5651b9/workbooks' revision='1.0' site='samarth2012037241f5651b9' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='transactions+ (sales)' inline='true' name='federated.10gnx0b06rrczc1aznqsz0zvfszr' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.1tmdukh095br111c5tibg0m1hb9x'>
            <connection class='mysql' dbname='sales' odbc-native-protocol='' one-time-sql='' port='3306' server='localhost' source-charset='' username='root' workgroup-auth-mode='prompt' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='mysql.1tmdukh095br111c5tibg0m1hb9x' name='customers' table='[customers]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='mysql.1tmdukh095br111c5tibg0m1hb9x' name='transactions' table='[transactions]' type='table' />
          <relation connection='mysql.1tmdukh095br111c5tibg0m1hb9x' name='customers' table='[customers]' type='table' />
          <relation connection='mysql.1tmdukh095br111c5tibg0m1hb9x' name='date' table='[date]' type='table' />
          <relation connection='mysql.1tmdukh095br111c5tibg0m1hb9x' name='markets' table='[markets]' type='table' />
          <relation connection='mysql.1tmdukh095br111c5tibg0m1hb9x' name='products' table='[products]' type='table' />
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[currency]' value='[transactions].[currency]' />
          <map key='[custmer_name]' value='[customers].[custmer_name]' />
          <map key='[customer_code (customers)]' value='[customers].[customer_code]' />
          <map key='[customer_code]' value='[transactions].[customer_code]' />
          <map key='[customer_type]' value='[customers].[customer_type]' />
          <map key='[cy_date]' value='[date].[cy_date]' />
          <map key='[date]' value='[date].[date]' />
          <map key='[date_yy_mmm]' value='[date].[date_yy_mmm]' />
          <map key='[market_code]' value='[transactions].[market_code]' />
          <map key='[markets_code]' value='[markets].[markets_code]' />
          <map key='[markets_name]' value='[markets].[markets_name]' />
          <map key='[month_name]' value='[date].[month_name]' />
          <map key='[order_date]' value='[transactions].[order_date]' />
          <map key='[product_code (products)]' value='[products].[product_code]' />
          <map key='[product_code]' value='[transactions].[product_code]' />
          <map key='[product_type]' value='[products].[product_type]' />
          <map key='[sales_amount]' value='[transactions].[sales_amount]' />
          <map key='[sales_qty]' value='[transactions].[sales_qty]' />
          <map key='[year]' value='[date].[year]' />
          <map key='[zone]' value='[markets].[zone]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>product_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[product_code]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>product_code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[transactions_55A89FCA169D490D95ADD7E1DD0ADE13]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[customer_code]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>customer_code</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[transactions_55A89FCA169D490D95ADD7E1DD0ADE13]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>market_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[market_code]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>market_code</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[transactions_55A89FCA169D490D95ADD7E1DD0ADE13]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[order_date]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>order_date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[transactions_55A89FCA169D490D95ADD7E1DD0ADE13]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sales_qty</remote-name>
            <remote-type>3</remote-type>
            <local-name>[sales_qty]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>sales_qty</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[transactions_55A89FCA169D490D95ADD7E1DD0ADE13]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sales_amount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sales_amount]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>sales_amount</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[transactions_55A89FCA169D490D95ADD7E1DD0ADE13]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>currency</remote-name>
            <remote-type>130</remote-type>
            <local-name>[currency]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>currency</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[transactions_55A89FCA169D490D95ADD7E1DD0ADE13]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[customer_code (customers)]</local-name>
            <parent-name>[customers]</parent-name>
            <remote-alias>customer_code</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[customers_98115A1DA7B247CFA67943ACC52770C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>custmer_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[custmer_name]</local-name>
            <parent-name>[customers]</parent-name>
            <remote-alias>custmer_name</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[customers_98115A1DA7B247CFA67943ACC52770C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[customer_type]</local-name>
            <parent-name>[customers]</parent-name>
            <remote-alias>customer_type</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[customers_98115A1DA7B247CFA67943ACC52770C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>13</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[date_65CDFD48B36E4F08866D4E47596B17EE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cy_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[cy_date]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>cy_date</remote-alias>
            <ordinal>14</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[date_65CDFD48B36E4F08866D4E47596B17EE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[date_65CDFD48B36E4F08866D4E47596B17EE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[month_name]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>month_name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[date_65CDFD48B36E4F08866D4E47596B17EE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_yy_mmm</remote-name>
            <remote-type>130</remote-type>
            <local-name>[date_yy_mmm]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>date_yy_mmm</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[date_65CDFD48B36E4F08866D4E47596B17EE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>markets_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[markets_code]</local-name>
            <parent-name>[markets]</parent-name>
            <remote-alias>markets_code</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[markets_89CC9E9A23474725A87AE5C54DF88D20]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>markets_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[markets_name]</local-name>
            <parent-name>[markets]</parent-name>
            <remote-alias>markets_name</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[markets_89CC9E9A23474725A87AE5C54DF88D20]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>zone</remote-name>
            <remote-type>130</remote-type>
            <local-name>[zone]</local-name>
            <parent-name>[markets]</parent-name>
            <remote-alias>zone</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[markets_89CC9E9A23474725A87AE5C54DF88D20]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[product_code (products)]</local-name>
            <parent-name>[products]</parent-name>
            <remote-alias>product_code</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[products_8B214643B643495F87FD1FEB489FCDC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[product_type]</local-name>
            <parent-name>[products]</parent-name>
            <remote-alias>product_type</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[products_8B214643B643495F87FD1FEB489FCDC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Sales in INR' datatype='real' name='[Calculation_1178254261298995200]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [currency] == &apos;USD&apos; THEN [sales_amount]*80 else [sales_amount] End' />
      </column>
      <column caption='Blank' datatype='string' name='[Calculation_1178254261495066626]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot; &quot;' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='customers' datatype='table' name='[__tableau_internal_object_id__].[customers_98115A1DA7B247CFA67943ACC52770C0]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='date' datatype='table' name='[__tableau_internal_object_id__].[date_65CDFD48B36E4F08866D4E47596B17EE]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='markets' datatype='table' name='[__tableau_internal_object_id__].[markets_89CC9E9A23474725A87AE5C54DF88D20]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='products' datatype='table' name='[__tableau_internal_object_id__].[products_8B214643B643495F87FD1FEB489FCDC2]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='transactions' datatype='table' name='[__tableau_internal_object_id__].[transactions_55A89FCA169D490D95ADD7E1DD0ADE13]' role='measure' type='quantitative' />
      <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
      <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
      <column caption='Customer Code (Customers)' datatype='string' name='[customer_code (customers)]' role='dimension' type='nominal' />
      <column caption='Customer Code' datatype='string' name='[customer_code]' role='dimension' type='nominal' />
      <column caption='Customer Type' datatype='string' name='[customer_type]' role='dimension' type='nominal' />
      <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Date Yy Mmm' datatype='string' name='[date_yy_mmm]' role='dimension' type='nominal' />
      <column caption='Market Code' datatype='string' name='[market_code]' role='dimension' type='nominal' />
      <column caption='Markets Code' datatype='string' name='[markets_code]' role='dimension' type='nominal' />
      <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
      <column caption='Month Name' datatype='string' name='[month_name]' role='dimension' type='nominal' />
      <column caption='Order Date' datatype='date' name='[order_date]' role='dimension' type='ordinal' />
      <column caption='Product Code (Products)' datatype='string' name='[product_code (products)]' role='dimension' type='nominal' />
      <column caption='Product Code' datatype='string' name='[product_code]' role='dimension' type='nominal' />
      <column caption='Product Type' datatype='string' name='[product_type]' role='dimension' type='nominal' />
      <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
      <column caption='Sales Qty' datatype='integer' name='[sales_qty]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column caption='Zone' datatype='string' name='[zone]' role='dimension' type='nominal' />
      <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_1178254261495066626]' derivation='None' name='[none:Calculation_1178254261495066626:nk]' pivot='key' type='nominal' />
      <column-instance column='[product_code]' derivation='None' name='[none:product_code:nk]' pivot='key' type='nominal' />
      <column-instance column='[date]' derivation='Quarter-Trunc' name='[tqr:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Blank,MONTH(Cy Date))' hidden='true' name='[Action (Blank,MONTH(Cy Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1178254261495066626]' />
          <groupfilter function='level-members' level='[mn:cy_date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Blank,YEAR(Cy Date))' hidden='true' name='[Action (Blank,YEAR(Cy Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1178254261495066626]' />
          <groupfilter function='level-members' level='[yr:cy_date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Markets Name)' hidden='true' name='[Action (Markets Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[markets_name]' />
        </groupfilter>
      </group>
      <group caption='Action (Product Code)' hidden='true' name='[Action (Product Code)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[product_code]' />
        </groupfilter>
      </group>
      <group caption='Action (QUARTER(Date))' hidden='true' name='[Action (QUARTER(Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tqr:date:ok]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Blank,YEAR(Cy Date))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Calculation_1178254261495066626:nk]' />
          <groupfilter function='level-members' level='[yr:cy_date:ok]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='1500' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:product_code:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Prod009&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Prod029&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Prod049&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Prod069&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Prod089&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Prod109&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Prod129&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Prod149&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Prod169&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Prod189&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Prod209&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Prod229&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Prod249&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Prod269&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Prod289&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Prod310&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Prod330&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Prod001&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Prod021&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Prod041&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Prod061&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Prod081&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Prod101&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Prod121&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Prod141&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Prod161&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Prod181&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Prod201&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Prod221&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Prod241&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Prod261&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Prod281&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Prod302&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Prod322&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Prod005&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Prod025&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Prod045&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Prod065&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Prod085&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Prod105&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Prod125&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Prod145&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Prod165&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Prod185&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Prod205&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Prod225&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Prod245&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Prod265&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Prod285&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Prod306&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Prod326&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Prod013&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Prod033&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Prod053&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Prod073&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Prod093&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Prod113&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Prod133&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Prod153&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Prod173&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Prod193&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Prod213&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Prod233&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Prod253&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Prod273&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Prod293&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Prod314&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Prod334&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Prod010&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Prod030&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Prod050&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Prod070&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Prod090&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Prod110&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Prod130&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Prod150&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Prod170&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Prod190&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Prod210&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Prod230&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Prod250&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Prod270&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Prod290&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Prod311&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Prod331&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Prod006&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Prod026&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Prod046&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Prod066&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Prod086&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Prod106&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Prod126&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Prod146&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Prod166&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Prod186&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Prod206&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Prod226&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Prod246&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Prod266&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Prod286&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Prod307&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Prod327&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Prod019&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Prod039&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Prod059&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Prod079&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Prod099&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Prod119&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Prod139&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Prod159&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Prod179&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Prod199&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Prod219&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Prod239&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Prod259&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Prod279&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Prod300&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Prod320&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Prod002&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Prod022&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Prod042&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Prod062&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Prod082&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Prod102&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Prod122&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Prod142&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Prod162&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Prod182&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Prod202&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Prod222&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Prod242&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Prod262&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Prod282&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Prod303&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Prod323&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Prod017&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Prod037&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Prod057&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Prod077&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Prod097&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Prod117&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Prod137&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Prod157&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Prod177&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Prod197&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Prod217&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Prod237&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Prod257&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Prod277&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Prod297&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Prod318&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Prod338&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Prod007&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Prod027&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Prod047&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Prod067&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Prod087&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Prod107&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Prod127&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Prod147&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Prod167&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Prod187&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Prod207&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Prod227&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Prod247&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Prod267&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Prod287&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Prod308&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Prod328&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Prod014&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Prod034&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Prod054&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Prod074&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Prod094&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Prod114&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Prod134&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Prod154&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Prod174&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Prod194&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Prod214&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Prod234&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Prod254&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Prod274&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Prod294&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Prod315&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Prod335&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Prod015&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Prod035&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Prod055&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Prod075&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Prod095&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Prod115&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Prod135&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Prod155&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Prod175&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Prod195&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Prod215&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Prod235&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Prod255&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Prod275&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Prod295&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Prod316&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Prod336&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Prod018&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Prod038&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Prod058&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Prod078&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Prod098&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Prod118&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Prod138&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Prod158&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Prod178&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Prod198&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Prod218&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Prod238&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Prod258&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Prod278&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Prod298&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Prod319&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Prod339&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Prod020&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Prod040&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Prod060&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Prod080&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Prod100&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Prod120&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Prod140&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Prod160&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Prod180&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Prod200&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Prod220&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Prod240&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Prod260&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Prod280&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Prod301&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Prod321&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Prod011&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Prod031&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Prod051&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Prod071&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Prod091&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Prod111&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Prod131&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Prod151&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Prod171&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Prod191&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Prod211&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Prod231&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Prod251&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Prod271&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Prod291&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Prod312&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Prod332&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Prod008&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Prod028&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Prod048&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Prod068&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Prod088&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Prod108&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Prod128&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Prod148&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Prod168&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Prod188&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Prod208&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Prod228&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Prod248&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Prod268&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Prod288&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Prod309&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Prod329&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Prod003&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Prod023&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Prod043&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Prod063&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Prod083&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Prod103&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Prod123&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Prod143&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Prod163&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Prod183&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Prod203&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Prod223&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Prod243&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Prod263&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Prod283&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Prod304&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Prod324&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Prod016&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Prod036&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Prod056&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Prod076&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Prod096&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Prod116&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Prod136&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Prod156&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Prod176&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Prod196&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Prod216&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Prod236&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Prod256&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Prod276&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Prod296&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Prod317&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Prod337&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Prod012&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Prod032&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Prod052&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Prod072&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Prod092&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Prod112&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Prod132&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Prod152&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Prod172&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Prod192&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Prod212&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Prod232&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Prod252&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Prod272&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Prod292&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Prod313&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Prod333&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Prod004&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Prod024&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Prod044&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Prod064&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Prod084&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Prod104&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Prod124&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Prod144&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Prod164&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Prod184&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Prod204&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Prod224&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Prod244&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Prod264&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Prod284&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Prod305&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Prod325&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='product_code' />
        <field-sort-custom-order field='customer_code' />
        <field-sort-custom-order field='market_code' />
        <field-sort-custom-order field='order_date' />
        <field-sort-custom-order field='sales_qty' />
        <field-sort-custom-order field='sales_amount' />
        <field-sort-custom-order field='Calculation_1178254261298995200' />
        <field-sort-custom-order field='currency' />
      </field-sort-info>
      <filter class='quantitative' column='[sales_amount]' filter-group='2' included-values='in-range'>
        <min>1.0</min>
      </filter>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='customers' id='customers_98115A1DA7B247CFA67943ACC52770C0'>
            <properties context=''>
              <relation connection='mysql.1tmdukh095br111c5tibg0m1hb9x' name='customers' table='[customers]' type='table' />
            </properties>
          </object>
          <object caption='date' id='date_65CDFD48B36E4F08866D4E47596B17EE'>
            <properties context=''>
              <relation connection='mysql.1tmdukh095br111c5tibg0m1hb9x' name='date' table='[date]' type='table' />
            </properties>
          </object>
          <object caption='markets' id='markets_89CC9E9A23474725A87AE5C54DF88D20'>
            <properties context=''>
              <relation connection='mysql.1tmdukh095br111c5tibg0m1hb9x' name='markets' table='[markets]' type='table' />
            </properties>
          </object>
          <object caption='products' id='products_8B214643B643495F87FD1FEB489FCDC2'>
            <properties context=''>
              <relation connection='mysql.1tmdukh095br111c5tibg0m1hb9x' name='products' table='[products]' type='table' />
            </properties>
          </object>
          <object caption='transactions' id='transactions_55A89FCA169D490D95ADD7E1DD0ADE13'>
            <properties context=''>
              <relation connection='mysql.1tmdukh095br111c5tibg0m1hb9x' name='transactions' table='[transactions]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[customer_code]' />
              <expression op='[customer_code (customers)]' />
            </expression>
            <first-end-point object-id='transactions_55A89FCA169D490D95ADD7E1DD0ADE13' />
            <second-end-point _.fcp.ObjectModelRelationshipPerfOptions.true...is-db-set-unique-key='true' object-id='customers_98115A1DA7B247CFA67943ACC52770C0' unique-key='true' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[order_date]' />
              <expression op='[date]' />
            </expression>
            <first-end-point object-id='transactions_55A89FCA169D490D95ADD7E1DD0ADE13' />
            <second-end-point _.fcp.ObjectModelRelationshipPerfOptions.true...is-db-set-unique-key='true' object-id='date_65CDFD48B36E4F08866D4E47596B17EE' unique-key='true' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[market_code]' />
              <expression op='[markets_code]' />
            </expression>
            <first-end-point object-id='transactions_55A89FCA169D490D95ADD7E1DD0ADE13' />
            <second-end-point _.fcp.ObjectModelRelationshipPerfOptions.true...is-db-set-unique-key='true' object-id='markets_89CC9E9A23474725A87AE5C54DF88D20' unique-key='true' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[product_code]' />
              <expression op='[product_code (products)]' />
            </expression>
            <first-end-point object-id='transactions_55A89FCA169D490D95ADD7E1DD0ADE13' />
            <second-end-point _.fcp.ObjectModelRelationshipPerfOptions.true...is-db-set-unique-key='true' object-id='products_8B214643B643495F87FD1FEB489FCDC2' unique-key='true' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_3E93B35D6E3F47F38CC3F74F12245C20]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Year' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_5AA8FF02B5CB4C5BB140A83393651103]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Month' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3_F382D8E6ABC74B92A9E6D838D27D039E]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Quantity' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4_7D7CD02F941344308356D56F93920CC4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Revenue' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action5_15EFCF225BDB443A8E8118995656A87C]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Revenue by Markets' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 6 (generated)' name='[Action6_4CA183B4B6994DBABD5FE305C1189DB8]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sales Qty by Market' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 7 (generated)' name='[Action7_296C9924CDB147E2A290F0AF71515C0F]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Revenue by Year' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 8 (generated)' name='[Action8_E067B7CDB1274B25B904EB69FE1FE6A3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='TOP 5 Products' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Month'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.10gnx0b06rrczc1aznqsz0zvfszr' />
          </datasources>
          <datasource-dependencies datasource='federated.10gnx0b06rrczc1aznqsz0zvfszr'>
            <column caption='Blank' datatype='string' name='[Calculation_1178254261495066626]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1178254261495066626]' derivation='None' name='[none:Calculation_1178254261495066626:nk]' pivot='key' type='nominal' />
            <column caption='Product Code' datatype='string' name='[product_code]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_3E93B35D6E3F47F38CC3F74F12245C20]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1178254261495066626]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action6_4CA183B4B6994DBABD5FE305C1189DB8]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[Action (Product Code)]'>
            <groupfilter function='level-members' level='[product_code]' user:ui-action-filter='[Action8_E067B7CDB1274B25B904EB69FE1FE6A3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.10gnx0b06rrczc1aznqsz0zvfszr].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.10gnx0b06rrczc1aznqsz0zvfszr].[Action (Markets Name)]</column>
            <column>[federated.10gnx0b06rrczc1aznqsz0zvfszr].[Action (Product Code)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[mn:cy_date:ok]' value='66' />
            <format attr='height' value='5' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[yr:cy_date:ok]' value='12' />
            <format attr='font-weight' field='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[yr:cy_date:ok]' value='bold' />
            <format attr='color' field='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[yr:cy_date:ok]' value='#b6992d' />
            <format attr='font-size' field='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[mn:cy_date:ok]' value='12' />
            <format attr='font-weight' field='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[mn:cy_date:ok]' value='bold' />
            <format attr='color' field='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[mn:cy_date:ok]' value='#b6992d' />
            <format attr='text-format' field='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[mn:cy_date:ok]' value='iLLL' />
            <format attr='text-align' field='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[mn:cy_date:ok]' value='center' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[none:Calculation_1178254261495066626:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.10gnx0b06rrczc1aznqsz0zvfszr].[mn:cy_date:ok]</cols>
      </table>
      <simple-id uuid='{5DF7E1A3-191C-479B-81D6-A2E927972042}' />
    </worksheet>
    <worksheet name='Quantity'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.10gnx0b06rrczc1aznqsz0zvfszr' />
          </datasources>
          <datasource-dependencies datasource='federated.10gnx0b06rrczc1aznqsz0zvfszr'>
            <column caption='Blank' datatype='string' name='[Calculation_1178254261495066626]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column caption='Product Code' datatype='string' name='[product_code]' role='dimension' type='nominal' />
            <column caption='Sales Qty' datatype='integer' name='[sales_qty]' role='measure' type='quantitative' />
            <column-instance column='[sales_qty]' derivation='Sum' name='[sum:sales_qty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_5AA8FF02B5CB4C5BB140A83393651103]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1178254261495066626]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_3E93B35D6E3F47F38CC3F74F12245C20]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1178254261495066626]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action6_4CA183B4B6994DBABD5FE305C1189DB8]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[Action (Product Code)]'>
            <groupfilter function='level-members' level='[product_code]' user:ui-action-filter='[Action8_E067B7CDB1274B25B904EB69FE1FE6A3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.10gnx0b06rrczc1aznqsz0zvfszr].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.10gnx0b06rrczc1aznqsz0zvfszr].[Action (Blank,MONTH(Cy Date))]</column>
            <column>[federated.10gnx0b06rrczc1aznqsz0zvfszr].[Action (Markets Name)]</column>
            <column>[federated.10gnx0b06rrczc1aznqsz0zvfszr].[Action (Product Code)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[sum:sales_qty:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#59a14f' fontsize='26'>Sales Quantity</run>
                <run>Æ&#10;</run>
                <run fontcolor='#59a14f' fontsize='24'><![CDATA[<[federated.10gnx0b06rrczc1aznqsz0zvfszr].[sum:sales_qty:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{2AD34B79-5E30-4A8E-90ED-6A3269A404BB}' />
    </worksheet>
    <worksheet name='Revenue'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.10gnx0b06rrczc1aznqsz0zvfszr' />
          </datasources>
          <datasource-dependencies datasource='federated.10gnx0b06rrczc1aznqsz0zvfszr'>
            <column caption='Sales in INR' datatype='real' name='[Calculation_1178254261298995200]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [currency] == &apos;USD&apos; THEN [sales_amount]*80 else [sales_amount] End' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_1178254261495066626]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column caption='Product Code' datatype='string' name='[product_code]' role='dimension' type='nominal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1178254261298995200]' derivation='Sum' name='[sum:Calculation_1178254261298995200:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_5AA8FF02B5CB4C5BB140A83393651103]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1178254261495066626]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_3E93B35D6E3F47F38CC3F74F12245C20]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1178254261495066626]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action6_4CA183B4B6994DBABD5FE305C1189DB8]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[Action (Product Code)]'>
            <groupfilter function='level-members' level='[product_code]' user:ui-action-filter='[Action8_E067B7CDB1274B25B904EB69FE1FE6A3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.10gnx0b06rrczc1aznqsz0zvfszr].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.10gnx0b06rrczc1aznqsz0zvfszr].[Action (Blank,MONTH(Cy Date))]</column>
            <column>[federated.10gnx0b06rrczc1aznqsz0zvfszr].[Action (Markets Name)]</column>
            <column>[federated.10gnx0b06rrczc1aznqsz0zvfszr].[Action (Product Code)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[sum:Calculation_1178254261298995200:qk]' value='c&quot;₹ &quot;#,##0,,.00M;&quot;₹ &quot;-#,##0,,.00M' />
            <format attr='text-align' data-class='total' value='auto' />
            <format attr='font-size' value='16' />
            <format attr='font-size' field='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[sum:Calculation_1178254261298995200:qk]' value='24' />
            <format attr='color' field='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[sum:Calculation_1178254261298995200:qk]' value='#59a14f' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' value='auto' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[sum:Calculation_1178254261298995200:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#59a14f' fontsize='26'>Total Revenue</run>
                <run>Æ&#10;</run>
                <run fontcolor='#59a14f' fontsize='24'><![CDATA[<[federated.10gnx0b06rrczc1aznqsz0zvfszr].[sum:Calculation_1178254261298995200:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#75a1c7' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{CA1B0603-6DEB-41C5-8B2B-E7AD034A7BB0}' />
    </worksheet>
    <worksheet name='Revenue by Markets'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.10gnx0b06rrczc1aznqsz0zvfszr' />
          </datasources>
          <datasource-dependencies datasource='federated.10gnx0b06rrczc1aznqsz0zvfszr'>
            <column caption='Sales in INR' datatype='real' name='[Calculation_1178254261298995200]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [currency] == &apos;USD&apos; THEN [sales_amount]*80 else [sales_amount] End' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_1178254261495066626]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[markets_name]' derivation='None' name='[none:markets_name:nk]' pivot='key' type='nominal' />
            <column caption='Product Code' datatype='string' name='[product_code]' role='dimension' type='nominal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1178254261298995200]' derivation='Sum' name='[sum:Calculation_1178254261298995200:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_5AA8FF02B5CB4C5BB140A83393651103]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1178254261495066626]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_3E93B35D6E3F47F38CC3F74F12245C20]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1178254261495066626]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action6_4CA183B4B6994DBABD5FE305C1189DB8]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[Action (Product Code)]'>
            <groupfilter function='level-members' level='[product_code]' user:ui-action-filter='[Action8_E067B7CDB1274B25B904EB69FE1FE6A3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[none:markets_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[sum:Calculation_1178254261298995200:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.10gnx0b06rrczc1aznqsz0zvfszr].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.10gnx0b06rrczc1aznqsz0zvfszr].[Action (Blank,MONTH(Cy Date))]</column>
            <column>[federated.10gnx0b06rrczc1aznqsz0zvfszr].[Action (Markets Name)]</column>
            <column>[federated.10gnx0b06rrczc1aznqsz0zvfszr].[Action (Product Code)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[sum:Calculation_1178254261298995200:qk]' scope='cols' value='Revenue' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[none:markets_name:nk]' value='34' />
            <format attr='font-weight' field='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[sum:Calculation_1178254261298995200:qk]' value='bold' />
            <format attr='color' field='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[sum:Calculation_1178254261298995200:qk]' value='#59a14f' />
            <format attr='color' data-class='subtotal' field='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[sum:Calculation_1178254261298995200:qk]' value='#b6992d' />
            <format attr='text-format' field='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[sum:Calculation_1178254261298995200:qk]' value='c#,##0,,.00M' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[none:markets_name:nk]' value='#ffffff' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[none:markets_name:nk]' value='9' />
            <format attr='font-style' field='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[none:markets_name:nk]' value='normal' />
            <format attr='font-weight' field='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[none:markets_name:nk]' value='bold' />
            <format attr='color' field='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[none:markets_name:nk]' value='#000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[sum:Calculation_1178254261298995200:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.10gnx0b06rrczc1aznqsz0zvfszr].[sum:Calculation_1178254261298995200:qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='right' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.10gnx0b06rrczc1aznqsz0zvfszr].[none:markets_name:nk]</rows>
        <cols>[federated.10gnx0b06rrczc1aznqsz0zvfszr].[sum:Calculation_1178254261298995200:qk]</cols>
      </table>
      <simple-id uuid='{F7E9123E-DD9A-4FB7-BFF9-617EDBC01A65}' />
    </worksheet>
    <worksheet name='Revenue by Year'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#d3b348' fontsize='16'>Sales Chart</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.10gnx0b06rrczc1aznqsz0zvfszr' />
          </datasources>
          <datasource-dependencies datasource='federated.10gnx0b06rrczc1aznqsz0zvfszr'>
            <column caption='Sales in INR' datatype='real' name='[Calculation_1178254261298995200]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [currency] == &apos;USD&apos; THEN [sales_amount]*80 else [sales_amount] End' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_1178254261495066626]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column caption='Product Code' datatype='string' name='[product_code]' role='dimension' type='nominal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1178254261298995200]' derivation='Sum' name='[sum:Calculation_1178254261298995200:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Quarter-Trunc' name='[tqr:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_3E93B35D6E3F47F38CC3F74F12245C20]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1178254261495066626]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action6_4CA183B4B6994DBABD5FE305C1189DB8]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[Action (Product Code)]'>
            <groupfilter function='level-members' level='[product_code]' user:ui-action-filter='[Action8_E067B7CDB1274B25B904EB69FE1FE6A3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.10gnx0b06rrczc1aznqsz0zvfszr].[Action (Markets Name)]</column>
            <column>[federated.10gnx0b06rrczc1aznqsz0zvfszr].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.10gnx0b06rrczc1aznqsz0zvfszr].[Action (Product Code)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[sum:Calculation_1178254261298995200:qk]' scope='rows' value='Revenue' />
            <format attr='tick-color' field='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[sum:Calculation_1178254261298995200:qk]' value='#72b966' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[sum:Calculation_1178254261298995200:qk]' value='c&quot;₹ &quot;#,##0,,.0M;&quot;₹ &quot;-#,##0,,.0M' />
            <format attr='vertical-align' field='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[sum:Calculation_1178254261298995200:qk]' value='auto' />
            <format attr='wrap' field='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[sum:Calculation_1178254261298995200:qk]' value='auto' />
            <format attr='font-weight' field='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[sum:Calculation_1178254261298995200:qk]' value='bold' />
            <format attr='text-align' field='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[sum:Calculation_1178254261298995200:qk]' value='center' />
            <format attr='color' field='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[sum:Calculation_1178254261298995200:qk]' value='#000000' />
            <format attr='color' data-class='subtotal' field='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[sum:Calculation_1178254261298995200:qk]' value='#000000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[tqr:date:qk]' value='#ffffff' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[sum:Calculation_1178254261298995200:qk]' value='c&quot;₹ &quot;#,##0,,M;&quot;₹ &quot;-#,##0,,M' />
            <format attr='text-orientation' field='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[sum:Calculation_1178254261298995200:qk]' value='0' />
            <format attr='font-weight' field='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[sum:Calculation_1178254261298995200:qk]' value='bold' />
            <format attr='color' field='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[sum:Calculation_1178254261298995200:qk]' value='#000000' />
            <format attr='color' field='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[tqr:date:qk]' value='#000000' />
            <format attr='font-weight' field='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[tqr:date:qk]' value='bold' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[sum:Calculation_1178254261298995200:qk]' palette='orange_blue_white_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='color' field='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[sum:Calculation_1178254261298995200:qk]' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[sum:Calculation_1178254261298995200:qk]' />
              <text column='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[sum:Calculation_1178254261298995200:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#d3b348' />
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.10gnx0b06rrczc1aznqsz0zvfszr].[sum:Calculation_1178254261298995200:qk]</rows>
        <cols>[federated.10gnx0b06rrczc1aznqsz0zvfszr].[tqr:date:qk]</cols>
      </table>
      <simple-id uuid='{302B1304-008E-4253-8724-40EA65048CFF}' />
    </worksheet>
    <worksheet name='Sales Qty by Market'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.10gnx0b06rrczc1aznqsz0zvfszr' />
          </datasources>
          <datasource-dependencies datasource='federated.10gnx0b06rrczc1aznqsz0zvfszr'>
            <column caption='Blank' datatype='string' name='[Calculation_1178254261495066626]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[markets_name]' derivation='None' name='[none:markets_name:nk]' pivot='key' type='nominal' />
            <column caption='Product Code' datatype='string' name='[product_code]' role='dimension' type='nominal' />
            <column caption='Sales Qty' datatype='integer' name='[sales_qty]' role='measure' type='quantitative' />
            <column-instance column='[sales_qty]' derivation='Sum' name='[sum:sales_qty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_5AA8FF02B5CB4C5BB140A83393651103]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1178254261495066626]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_3E93B35D6E3F47F38CC3F74F12245C20]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1178254261495066626]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action5_15EFCF225BDB443A8E8118995656A87C]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[Action (Product Code)]'>
            <groupfilter function='level-members' level='[product_code]' user:ui-action-filter='[Action8_E067B7CDB1274B25B904EB69FE1FE6A3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[none:markets_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[sum:sales_qty:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.10gnx0b06rrczc1aznqsz0zvfszr].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.10gnx0b06rrczc1aznqsz0zvfszr].[Action (Blank,MONTH(Cy Date))]</column>
            <column>[federated.10gnx0b06rrczc1aznqsz0zvfszr].[Action (Product Code)]</column>
            <column>[federated.10gnx0b06rrczc1aznqsz0zvfszr].[Action (Markets Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[none:markets_name:nk]' value='33' />
            <format attr='text-align' field='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[sum:sales_qty:qk]' value='right' />
            <format attr='color' field='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[sum:sales_qty:qk]' value='#4e79a7' />
            <format attr='font-weight' field='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[sum:sales_qty:qk]' value='bold' />
            <format attr='text-format' field='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[sum:sales_qty:qk]' value='n#,##0,.00K;-#,##0,.00K' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[none:markets_name:nk]' value='#000000' />
            <format attr='font-weight' field='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[none:markets_name:nk]' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='in-tooltip' field='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[sum:sales_qty:qk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[sum:sales_qty:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.10gnx0b06rrczc1aznqsz0zvfszr].[none:markets_name:nk]</rows>
        <cols>[federated.10gnx0b06rrczc1aznqsz0zvfszr].[sum:sales_qty:qk]</cols>
      </table>
      <simple-id uuid='{BB1CCEDD-2BAB-4F25-884A-780D928AB2DD}' />
    </worksheet>
    <worksheet name='TOP 5 Products'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#f9a655'>TOP 5 Products</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.10gnx0b06rrczc1aznqsz0zvfszr' />
          </datasources>
          <datasource-dependencies datasource='federated.10gnx0b06rrczc1aznqsz0zvfszr'>
            <column caption='Sales in INR' datatype='real' name='[Calculation_1178254261298995200]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [currency] == &apos;USD&apos; THEN [sales_amount]*80 else [sales_amount] End' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[product_code]' derivation='None' name='[none:product_code:nk]' pivot='key' type='nominal' />
            <column caption='Product Code' datatype='string' name='[product_code]' role='dimension' type='nominal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1178254261298995200]' derivation='Sum' name='[sum:Calculation_1178254261298995200:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action6_4CA183B4B6994DBABD5FE305C1189DB8]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[none:product_code:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_1178254261298995200])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:product_code:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[none:product_code:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[sum:Calculation_1178254261298995200:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.10gnx0b06rrczc1aznqsz0zvfszr].[none:product_code:nk]</column>
            <column>[federated.10gnx0b06rrczc1aznqsz0zvfszr].[Action (Markets Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[sum:Calculation_1178254261298995200:qk]' scope='cols' value='Revenue ' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[none:product_code:nk]' value='41' />
            <format attr='text-format' field='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[sum:Calculation_1178254261298995200:qk]' value='c&quot; &quot;#,##0,,M;&quot; &quot;-#,##0,,M' />
            <format attr='font-weight' field='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[sum:Calculation_1178254261298995200:qk]' value='bold' />
            <format attr='color' field='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[sum:Calculation_1178254261298995200:qk]' value='#333333' />
            <format attr='text-align' field='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[sum:Calculation_1178254261298995200:qk]' value='right' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[sum:Calculation_1178254261298995200:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[sum:Calculation_1178254261298995200:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#72b966' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.10gnx0b06rrczc1aznqsz0zvfszr].[none:product_code:nk]</rows>
        <cols>[federated.10gnx0b06rrczc1aznqsz0zvfszr].[sum:Calculation_1178254261298995200:qk]</cols>
      </table>
      <simple-id uuid='{17E7839A-BA1C-4449-9BB0-0AD9E8B70377}' />
    </worksheet>
    <worksheet name='Top 5 Customers'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.10gnx0b06rrczc1aznqsz0zvfszr' />
          </datasources>
          <datasource-dependencies datasource='federated.10gnx0b06rrczc1aznqsz0zvfszr'>
            <column caption='Sales in INR' datatype='real' name='[Calculation_1178254261298995200]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [currency] == &apos;USD&apos; THEN [sales_amount]*80 else [sales_amount] End' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column-instance column='[custmer_name]' derivation='None' name='[none:custmer_name:nk]' pivot='key' type='nominal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1178254261298995200]' derivation='Sum' name='[sum:Calculation_1178254261298995200:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[none:custmer_name:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_1178254261298995200])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:custmer_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.10gnx0b06rrczc1aznqsz0zvfszr].[none:custmer_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[sum:Calculation_1178254261298995200:qk]' scope='cols' value='Revenue' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[none:custmer_name:nk]' value='55' />
            <format attr='text-format' field='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[sum:Calculation_1178254261298995200:qk]' value='c#,##0,,.00M' />
            <format attr='font-style' field='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[sum:Calculation_1178254261298995200:qk]' value='normal' />
            <format attr='text-decoration' field='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[sum:Calculation_1178254261298995200:qk]' value='none' />
            <format attr='font-weight' field='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[sum:Calculation_1178254261298995200:qk]' value='bold' />
            <format attr='text-align' field='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[sum:Calculation_1178254261298995200:qk]' value='center' />
            <format attr='font-size' field='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[sum:Calculation_1178254261298995200:qk]' value='9' />
            <format attr='color' field='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[sum:Calculation_1178254261298995200:qk]' value='#000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[none:custmer_name:nk]' value='#000000' />
            <format attr='font-weight' field='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[none:custmer_name:nk]' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[sum:Calculation_1178254261298995200:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#cec548' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.10gnx0b06rrczc1aznqsz0zvfszr].[none:custmer_name:nk]</rows>
        <cols>[federated.10gnx0b06rrczc1aznqsz0zvfszr].[sum:Calculation_1178254261298995200:qk]</cols>
      </table>
      <simple-id uuid='{7C31F62B-566D-477A-ACA8-EE52074924DF}' />
    </worksheet>
    <worksheet name='Year'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.10gnx0b06rrczc1aznqsz0zvfszr' />
          </datasources>
          <datasource-dependencies datasource='federated.10gnx0b06rrczc1aznqsz0zvfszr'>
            <column caption='Blank' datatype='string' name='[Calculation_1178254261495066626]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1178254261495066626]' derivation='None' name='[none:Calculation_1178254261495066626:nk]' pivot='key' type='nominal' />
            <column caption='Product Code' datatype='string' name='[product_code]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_5AA8FF02B5CB4C5BB140A83393651103]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1178254261495066626]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action6_4CA183B4B6994DBABD5FE305C1189DB8]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[Action (Product Code)]'>
            <groupfilter function='level-members' level='[product_code]' user:ui-action-filter='[Action8_E067B7CDB1274B25B904EB69FE1FE6A3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.10gnx0b06rrczc1aznqsz0zvfszr].[Action (Blank,MONTH(Cy Date))]</column>
            <column>[federated.10gnx0b06rrczc1aznqsz0zvfszr].[Action (Markets Name)]</column>
            <column>[federated.10gnx0b06rrczc1aznqsz0zvfszr].[Action (Product Code)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[yr:cy_date:ok]' value='140' />
            <format attr='height' value='5' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[yr:cy_date:ok]' value='21' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[yr:cy_date:ok]' value='#b6992d' />
            <format attr='font-weight' field='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[yr:cy_date:ok]' value='bold' />
            <format attr='text-align' field='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[yr:cy_date:ok]' value='center' />
            <format attr='text-format' field='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[yr:cy_date:ok]' value='' />
            <format attr='font-size' field='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[yr:cy_date:ok]' value='12' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.10gnx0b06rrczc1aznqsz0zvfszr].[none:Calculation_1178254261495066626:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.10gnx0b06rrczc1aznqsz0zvfszr].[yr:cy_date:ok]</cols>
      </table>
      <simple-id uuid='{CDB1E838-960A-41FF-BC15-ACB72BE76431}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1500' minheight='800' minwidth='1500' sizing-mode='fixed' />
      <zones>
        <zone h='7250' id='3' name='Year' w='37800' x='24467' y='1000' />
        <zone h='6250' id='4' name='Month' w='53200' x='16467' y='6500' />
        <zone h='19500' id='5' name='Revenue' w='24867' x='1267' y='12750' />
        <zone h='20375' id='6' name='Quantity' w='25867' x='27933' y='13000' />
        <zone h='72250' id='7' name='Revenue by Markets' w='26933' x='-67' y='31500' />
        <zone h='73125' id='8' name='Sales Qty by Market' w='28067' x='26467' y='31500' />
        <zone h='39000' id='9' name='Revenue by Year' show-title='false' w='44667' x='54733' y='16750' />
        <zone h='43125' id='10' name='TOP 5 Products' w='45667' x='54933' y='55875' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1650' minheight='1650' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='14' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='13' param='vert' type-v2='layout-flow' w='98934' x='533' y='1000'>
                <zone fixed-size='58' h='7250' id='3' is-fixed='true' name='Year' w='37800' x='24467' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='50' h='6250' id='4' is-fixed='true' name='Month' w='53200' x='16467' y='6500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='156' h='19500' id='5' is-fixed='true' name='Revenue' w='24867' x='1267' y='12750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='163' h='20375' id='6' is-fixed='true' name='Quantity' w='25867' x='27933' y='13000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39000' id='9' is-fixed='true' name='Revenue by Year' show-title='false' w='44667' x='54733' y='16750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='72250' id='7' is-fixed='true' name='Revenue by Markets' w='26933' x='-67' y='31500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='73125' id='8' is-fixed='true' name='Sales Qty by Market' w='28067' x='26467' y='31500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43125' id='10' is-fixed='true' name='TOP 5 Products' w='45667' x='54933' y='55875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{40135D75-5BAC-4E22-B6BF-43A804C08AD6}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='Revenue'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{7FF4570A-970F-46D3-8EB7-11FAAEA7919D}' />
    </window>
    <window class='worksheet' name='Quantity'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{19928CE3-EFB4-4DA4-9CE8-35754B348AC4}' />
    </window>
    <window class='worksheet' name='Revenue by Markets'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{6DB51B2A-C93C-49C7-AA9C-A08E9E4BA2BD}' />
    </window>
    <window class='worksheet' name='Sales Qty by Market'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{0D0CA93E-C7BA-4FF3-A501-8959D9DD5502}' />
    </window>
    <window class='worksheet' name='Top 5 Customers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{A2C72E26-357E-4F69-9E76-498D0A9B906D}' />
    </window>
    <window class='worksheet' name='TOP 5 Products'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{C2140C63-44DF-4B7A-AE92-821DCA4E2BCF}' />
    </window>
    <window class='worksheet' name='Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{B1D32F68-0DD1-44DE-91EB-4191F18F01EF}' />
    </window>
    <window class='worksheet' name='Month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{858D59EC-2CFA-480D-9003-03AF17B1F7AA}' />
    </window>
    <window class='worksheet' name='Revenue by Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{E14F1BA0-7D8D-45F0-814D-CBC2518132B6}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Month' />
        <viewpoint name='Quantity'>
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields />
                    <y-fields />
                  </pane-descriptor>
                  <columns>
                    <field>[federated.10gnx0b06rrczc1aznqsz0zvfszr].[sum:sales_qty:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>2431539</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Revenue'>
          <floating-toolbar-visibility value='1' />
        </viewpoint>
        <viewpoint name='Revenue by Markets' />
        <viewpoint name='Revenue by Year'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sales Qty by Market' />
        <viewpoint name='TOP 5 Products' />
        <viewpoint name='Year' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{CCDDF80C-4E7A-41E7-A57D-95671A0DC6F5}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='142' name='Quantity' width='192'>
      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
      FJOE7QkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='142' name='Revenue' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Revenue by Markets' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Revenue by Year' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sales Qty by Market' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='TOP 5 Products' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Top 5 Customers' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
